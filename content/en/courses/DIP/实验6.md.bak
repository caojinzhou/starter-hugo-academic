---
title: 实验6 参考代码
date: '2022-05-19'
type: book
weight: 60
active: true
draft: true
---

## 一、实验目的

>1.	掌握图像信息熵的计算方法。
>2.	理解霍夫曼编码和解码的基本步骤。
>3.	掌握霍夫曼编码和解码的操作，编程实现。




## 二、实验环境

> Matlab

## 三、实验内容

> 1.	计算图像熵值,自行编写huffman函数实现霍夫曼编码，并计算平均编码长度和编码效率；

```matlab
clear,clc,close ALL;
tic
I=imread('task1/3.tif');
I=double(I);
[m,n]=size(I);m0=m/2;n0=n/2;
a=I(1:m0,1:n0);b=I(1:m0,n0:n);c=I(m0:m,1:n0);d=I(m0:m,n0:n);
j = 20;
I0=hist(I(:),j);I0=I0/sum(I0(:));

% 计算熵
i=find(I0);h = -sum(I0(i).*log2(I0(i)));

% 霍夫曼编码及计算编码效率
alph = huffman(I0);

for i=1:length(I0)
    [m,n]=size(char(alph(i)));
    l(i)=n;
end

disp(['图像熵为：',num2str(h)]);
p = sum(I0.*l);
disp(['平均编码长度为：',num2str(p)]);
n = h/p; 
disp(['编码效率为：',num2str(n)]);
toc
```


> 2.	实现霍夫曼解码

```matlab
%% 霍夫曼解码
clear,clc,close ALL;
tic
I = imread('task1\2.tif');
[M,N] = size(I);
I1 = I(:);
P = zeros(1,256);
%获取各符号的概率
for i = 0:255
    P(i+1) = length(find(I1 == i))/(M*N);
end
k = 0:255;
dict = huffmandict(k,P); %生成字典
enco = huffmanenco(I1,dict); %编码
deco = huffmandeco(enco,dict); %解码
Ide = col2im(deco,[M,N],[M,N],'distinct'); %把向量重新转换成图像块；
figure('Name','霍夫曼编解码效果图','NumberTitle','off');
subplot(1,2,1);imshow(I);title('原图');
subplot(1,2,2);imshow(uint8(Ide));title('解码图');
toc
```

